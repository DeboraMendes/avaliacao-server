<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.viasoft</groupId>
	<artifactId>avaliacao</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>avaliacao</name>
	<description> Nimitz startup demo project</description>

	<properties>
		<java.version>12</java.version>
	</properties>

	<dependencies>

		<!--
		é necessário para simplismente rodar a aplicação, pois possui por exemplo:
		* o container padrão Tomcat na porta 8080
		* disponibiliza o Spring MVC: Para que todas as requisições que chegarem na aplicação sejam recebidas e tratadas pelo Spring MVC, que é um Framework Java que ajuda no desenvolvimento de aplicações Web.
		* a anotação @SpringBootApplication
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
		<!--
		é necessário no momento do mapeamento das requisições, para o controller responder o template
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
		<!--
		identifica quando o código sofreu alterações e reinicia o servidor automaticamente
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
		<!--
		é necessário para configuração do banco de dados, configura todas as dependências com Hibernate e JPA
		possui por exemplo:
		a interface CrudRepository que podemos utilizar para o crud normalzinho e para criar diversos métodos de pesquisa
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
		<!--
		fornece vários endpoints onde podemos verificar algumas informações em tempo de execução da aplicação
		ou seja, uma pós implantação,
		por exemplo, ver a saúde da aplicação usando o /health.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
		<!--
		 frameworks para desenvolvimento Web. Implementação do padrão MVC em conjunto com os principais recursos do Spring.
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.1.8.RELEASE</version>
		</dependency>
		<!--
		é necessário para conectarmos com o MySQL
		-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.17</version>
			<scope>runtime</scope>
		</dependency>
		<!--
		é necessário para por exemplo:
		* conseguirmos utilizar a anotação @Data que seria um atalho para @ToString, @EqualsAndHashCode, @Getter, @Setters e @RequiredArgsConstructor
		-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.8</version>
			<scope>provided</scope>
		</dependency>
		<!--
		é encessário para migração de banco de dados
		-->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>5.2.4</version>
		</dependency>
<!--		mander e-mail -->
		<dependency>
			<groupId>com.icegreen</groupId>
			<artifactId>greenmail</artifactId>
			<version>1.5.5</version>
			<scope>test</scope>
		</dependency>
<!--		recuperar senha-->
<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>2.1.6.RELEASE</version>
		</dependency>
-->
<!--		framework que contém uma coleção de pequenos métodos que nos auxiliam muito na escrita de testes mais legiveis -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
<!--		fazer testes -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
<!--	framework mockito. Objetos que simulam os comportamentos dos objetos reais é o que chamamos de mock objects ou objetos dublês. Eles são especialmente úteis em testes em que temos objetos que se integram com outros sistemas.	-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!--
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>5.2.4</version>
				<configuration>
					<driver>com.mysql.cj.jdbc.Driver</driver>
					<url>jdbc:mysql://127.0.0.1:3306/avaliacao</url>
					<user>root</user>
					<password>root</password>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>8.0.17</version>
					</dependency>
				</dependencies>
			</plugin>
			-->
			<!--
			plugin e a regra de como o build será realizado ao empacotar a aplicação
			é necessário para gerar um Fatjar que é a aplicação completa empacotada em um único arquivo .jar
			assim já sobe toda nossa aplicação diretamente da linha de comando
			sem esse pluguin é gerado o jar normalmente, porém no momento de executar o jar a classe principal, o main, não é localizada
			-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.1.6.RELEASE</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>8</source>
					<target>8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
